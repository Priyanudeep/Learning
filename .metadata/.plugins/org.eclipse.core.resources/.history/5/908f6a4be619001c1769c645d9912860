package practiceProblems;

import java.util.Arrays;

public class SplitListToParts {

	private static ListNode[] solution1(ListNode head, int k) {
		ListNode[] result = new ListNode[k];
		ListNode curr = head;
		int len = 0;
		while (curr != null) {
			++len;
			curr = curr.next;
		}
		System.out.println("Length: " + len);
		int div = len / k;
		int rem = len % k;
		int out = rem;
		curr = head;
		//int i = 0;
		int result_len = rem == 0 ? div : div + 1;
		int j = 0;
		while (rem > 0) {
			result[j] = curr;
			++j;
			for (int i = div; i > 0; --i) {
				curr = curr.next;
			}
			ListNode temp = curr.next;
			curr.next = null;
			curr = temp;
			--rem;
		}
		while (curr != null) {
			result[j] = curr;
			++j;
			for (int i = div - 1; i > 0; --i) {
				curr = curr.next;
			}
			ListNode temp = curr.next;
			curr.next = null;
			curr = temp;
			--rem;
		}
		for(ListNode n:result)
			System.out.print(n.val + "->");
		return result;
	}

	public static void main(String[] args) {
		int[] arr = new int[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };
		ListNode node = new ListNode();
		node = node.createList(arr);
		var result = solution1(node, 9);
	}
}
